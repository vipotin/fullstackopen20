{"ast":null,"code":"var _jsxFileName = \"/Users/vilma/projects/fullstackopen2020/fullstack-part4/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n\n  const handleLogin = event => {\n    event.preventDefault();\n\n    try {\n      const user = loginService.login({\n        username,\n        password\n      });\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 4000);\n    }\n  };\n\n  const loginForm = () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Log in to application\"), React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"username\", React.createElement(\"input\", {\n    type: \"text\",\n    value: username,\n    name: \"Username\",\n    onChange: ({\n      target\n    }) => setUsername(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"password\"), React.createElement(\"input\", {\n    type: \"text\",\n    value: password,\n    name: \"Password\",\n    onChange: ({\n      target\n    }) => setUsername(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"login\")));\n\n  const blogForm = () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"blogs\"), `${username} logged in`, blogs.map(blog => React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, user === null ? loginForm() : blogForm());\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/vilma/projects/fullstackopen2020/fullstack-part4/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","blogService","loginService","App","blogs","setBlogs","user","setUser","username","setUsername","password","setPassword","errorMessage","setErrorMessage","getAll","then","handleLogin","event","preventDefault","login","exception","setTimeout","loginForm","target","value","blogForm","map","blog","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  const handleLogin = event => {\n    event.preventDefault()\n    try {\n      const user = loginService.login({ username, password })\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 4000)\n    }\n  }\n\n  const loginForm = () => (\n    <div>\n    <h2>Log in to application</h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          username\n          <input type='text' value={username} name='Username'\n          onChange={({ target }) => setUsername(target.value)}/>\n        </div>\n        <div>\n          password\n        </div>\n        <input type='text' value={password} name='Password'\n        onChange={({ target }) => setUsername(target.value)}/>\n      <button type='submit'>login</button>\n     </form>\n    </div>\n  )\n\n  const blogForm = () => (\n    <div>\n      <h2>blogs</h2>\n      {`${username} logged in`}\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n\n  return (\n    <div>\n      {/* <Notification message={errorMessage} /> */}\n      {user === null ? loginForm() : blogForm()}\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}