{"ast":null,"code":"var _jsxFileName = \"/Users/vilma/projects/fullstackopen2020/fullstack-part4-5/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport Notification from './components/Notification';\nimport LoginForm from './components/LoginForm';\nimport BlogForm from './components/BlogForm';\nimport Togglable from './components/Togglable';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [blogTitle, setBlogTitle] = useState('');\n  const [blogAuthor, setBlogAuthor] = useState('');\n  const [blogUrl, setBlogUrl] = useState('');\n  const [notification, setNotification] = useState(null);\n  const [errorOccured, setErrorOccured] = useState(false);\n  const blogFormRef = React.createRef();\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n\n    if (loggedUserJSON) {\n      const loggedUser = JSON.parse(loggedUserJSON);\n      setUser(loggedUser);\n      blogService.setToken(loggedUser.token);\n    }\n  }, []);\n\n  const updateBlogList = async () => {\n    const blogList = await blogService.getAll();\n    setBlogs(blogList);\n  };\n\n  const showNotification = (message, error) => {\n    setNotification(message);\n    setErrorOccured(error);\n    setTimeout(() => {\n      setNotification(null);\n      setErrorOccured(false);\n    }, 4000);\n  };\n\n  const handleLogin = async userObject => {\n    try {\n      console.log(userObject.username, userObject.password);\n      const loggedUser = await loginService.login(userObject);\n      window.localStorage.setItem('loggedUser', JSON.stringify(loggedUser));\n      blogService.setToken(loggedUser.token);\n      setUser(loggedUser);\n      showNotification('login successful', false);\n    } catch (exception) {\n      showNotification('wrong username or password', true);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      window.localStorage.removeItem('loggedUser');\n      showNotification('logout successful', false);\n      setUser(null);\n    } catch (exception) {\n      showNotification('logout failed', true);\n    }\n  };\n\n  const addBlog = async blogObject => {\n    try {\n      blogFormRef.current.toggleVisibility();\n      await blogService.create(blogObject);\n      updateBlogList();\n      showNotification(`a new blog ${blogObject.title} by ${blogObject.author} added`, false);\n    } catch (exception) {\n      showNotification('fill all the fields', true);\n    }\n  };\n\n  const addLike = async blogObject => {\n    try {\n      let updatedBlog = blogObject;\n      updatedBlog.user = blogObject.user.id;\n      await blogService.update(updatedBlog);\n      updateBlogList();\n    } catch (exception) {\n      showNotification('adding like failed', true);\n    }\n  }; // const getUpdatedBlog = async blogObject => {\n  //   try {\n  //     return await blogService.getItem(blogObject)\n  //   } catch (exception) {\n  //   }\n  // }\n\n\n  const deleteBlog = async blogObject => {\n    try {\n      await blogService.deleteItem(blogObject);\n      updateBlogList();\n      showNotification(`a new blog ${blogObject.title} by ${blogObject.author} deleted`, false);\n    } catch (exception) {\n      showNotification('deleting failed', true);\n    }\n  };\n\n  const loginForm = () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    handleSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }));\n\n  const blogSection = () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"blogs\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, user.name, \" logged in\", React.createElement(\"button\", {\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"logout\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(Togglable, {\n    buttonLabel: \"new blog\",\n    ref: blogFormRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(BlogForm, {\n    title: blogTitle,\n    author: blogAuthor,\n    url: blogUrl,\n    handleTitleChange: ({\n      target\n    }) => setBlogTitle(target.value),\n    handleAuthorChange: ({\n      target\n    }) => setBlogAuthor(target.value),\n    handleUrlChange: ({\n      target\n    }) => setBlogUrl(target.value),\n    createBlog: addBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), blogs.sort((a, b) => b.likes - a.likes).map(blog => React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    update: addLike,\n    remove: deleteBlog,\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Notification, {\n    errorOccured: errorOccured,\n    message: notification,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), user === null ? loginForm() : blogSection());\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/vilma/projects/fullstackopen2020/fullstack-part4-5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","Notification","LoginForm","BlogForm","Togglable","blogService","loginService","App","blogs","setBlogs","user","setUser","username","setUsername","password","setPassword","blogTitle","setBlogTitle","blogAuthor","setBlogAuthor","blogUrl","setBlogUrl","notification","setNotification","errorOccured","setErrorOccured","blogFormRef","createRef","getAll","then","loggedUserJSON","window","localStorage","getItem","loggedUser","JSON","parse","setToken","token","updateBlogList","blogList","showNotification","message","error","setTimeout","handleLogin","userObject","console","log","login","setItem","stringify","exception","handleLogout","removeItem","addBlog","blogObject","current","toggleVisibility","create","title","author","addLike","updatedBlog","id","update","deleteBlog","deleteItem","loginForm","blogSection","name","target","value","sort","a","b","likes","map","blog"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [blogTitle, setBlogTitle] = useState('')\n  const [blogAuthor, setBlogAuthor] = useState('')\n  const [blogUrl, setBlogUrl] = useState('')\n  const [notification, setNotification] = useState(null)\n  const [errorOccured, setErrorOccured] = useState(false)\n  const blogFormRef = React.createRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const loggedUser = JSON.parse(loggedUserJSON)\n      setUser(loggedUser)\n      blogService.setToken(loggedUser.token)\n    }\n  }, [])\n\n  const updateBlogList = async () => {\n    const blogList = await blogService.getAll()\n    setBlogs(blogList)\n  }\n\n  const showNotification = (message, error) => {\n    setNotification(message)\n    setErrorOccured(error)\n    setTimeout(() => {\n      setNotification(null)\n      setErrorOccured(false)\n    }, 4000)\n  }\n\n  const handleLogin = async userObject => {\n    try {\n      console.log(userObject.username, userObject.password)\n      const loggedUser = await loginService.login(userObject)\n      window.localStorage.setItem('loggedUser', JSON.stringify(loggedUser))\n      blogService.setToken(loggedUser.token)\n      setUser(loggedUser)\n      showNotification('login successful', false)\n    } catch (exception) {\n      showNotification('wrong username or password', true)\n    }\n  }\n\n  const handleLogout = async () => {\n    try {\n      window.localStorage.removeItem('loggedUser')\n      showNotification('logout successful', false)\n      setUser(null)\n    } catch (exception) {\n      showNotification('logout failed', true)\n    }\n  }\n\n  const addBlog = async blogObject => {\n    try {\n      blogFormRef.current.toggleVisibility()\n      await blogService.create(blogObject)\n      updateBlogList()\n      showNotification(`a new blog ${blogObject.title} by ${blogObject.author} added`, false)\n    } catch (exception) {\n      showNotification('fill all the fields', true)\n    }\n  }\n\n  const addLike = async blogObject => {\n    try {\n      let updatedBlog = blogObject\n      updatedBlog.user = blogObject.user.id\n      await blogService.update(updatedBlog)\n      updateBlogList()\n    } catch (exception) {\n      showNotification('adding like failed', true)\n    }\n  }\n\n  // const getUpdatedBlog = async blogObject => {\n  //   try {\n  //     return await blogService.getItem(blogObject)\n  //   } catch (exception) {\n\n  //   }\n  // }\n\n  const deleteBlog = async blogObject => {\n    try {\n      await blogService.deleteItem(blogObject)\n      updateBlogList()\n      showNotification(`a new blog ${blogObject.title} by ${blogObject.author} deleted`, false)\n    } catch (exception) {\n      showNotification('deleting failed', true)\n    }\n  }\n\n  const loginForm = () => (\n    <div>\n      <LoginForm handleSubmit={handleLogin}/>\n    </div>\n  )\n\n  const blogSection = () => (\n    <div>\n      <h2>blogs</h2>\n      <div>\n        {user.name} logged in\n        <button onClick={handleLogout}>logout</button>\n      </div>\n      <br></br>\n      <Togglable buttonLabel='new blog' ref={blogFormRef}>\n        <BlogForm\n          title={blogTitle}\n          author={blogAuthor}\n          url={blogUrl}\n          handleTitleChange={({ target }) => setBlogTitle(target.value)}\n          handleAuthorChange={({ target }) => setBlogAuthor(target.value)}\n          handleUrlChange={({ target }) => setBlogUrl(target.value)}\n          createBlog={addBlog}\n        />\n      </Togglable>\n      <br></br>\n      {blogs.sort((a, b) => b.likes - a.likes).map(blog =>\n        <Blog key={blog.id} blog={blog} update={addLike} remove={deleteBlog} user={user}/>\n      )}\n    </div>\n  )\n\n  return (\n    <div>\n      <Notification errorOccured={errorOccured} message={notification} />\n      {user === null ? loginForm() : blogSection()}\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}