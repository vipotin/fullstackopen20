{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const request = await axios.get(baseUrl);\n  return request.data;\n};\n\nconst getItem = async object => {\n  const request = await axios.get(`${baseUrl}/${object.id}`);\n  return request.data;\n};\n\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = async updatedObject => {\n  const response = await axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject);\n  return response.data;\n};\n\nconst deleteItem = async object => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.delete(`${baseUrl}/${object.id}`, config);\n  return response.data;\n};\n\nexport default {\n  getAll,\n  create,\n  setToken,\n  update,\n  deleteItem,\n  getItem\n};","map":{"version":3,"sources":["/Users/vilma/projects/fullstackopen2020/fullstack-part4-5/bloglist-frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","data","getItem","object","id","create","newObject","config","headers","Authorization","response","post","update","updatedObject","put","deleteItem","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAC3BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,YAAY;AACzB,QAAMC,OAAO,GAAI,MAAMN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAvB;AACA,SAAOK,OAAO,CAACE,IAAf;AACD,CAHD;;AAKA,MAAMC,OAAO,GAAG,MAAMC,MAAN,IAAgB;AAC9B,QAAMJ,OAAO,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEN,OAAQ,IAAGS,MAAM,CAACC,EAAG,EAAlC,CAAtB;AACA,SAAOL,OAAO,CAACE,IAAf;AACD,CAHD;;AAKA,MAAMI,MAAM,GAAG,MAAMC,SAAN,IAAmB;AAChC,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEd;AAAjB;AADI,GAAf;AAGA,QAAMe,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAWjB,OAAX,EAAoBY,SAApB,EAA+BC,MAA/B,CAAvB;AACA,SAAOG,QAAQ,CAACT,IAAhB;AACD,CAND;;AAQA,MAAMW,MAAM,GAAG,MAAMC,aAAN,IAAuB;AACpC,QAAMH,QAAQ,GAAG,MAAMjB,KAAK,CAACqB,GAAN,CAAW,GAAEpB,OAAQ,IAAGmB,aAAa,CAACT,EAAG,EAAzC,EAA4CS,aAA5C,CAAvB;AACA,SAAOH,QAAQ,CAACT,IAAhB;AACD,CAHD;;AAKA,MAAMc,UAAU,GAAG,MAAMZ,MAAN,IAAgB;AACjC,QAAMI,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEd;AAAjB;AADI,GAAf;AAGA,QAAMe,QAAQ,GAAG,MAAMjB,KAAK,CAACuB,MAAN,CAAc,GAAEtB,OAAQ,IAAGS,MAAM,CAACC,EAAG,EAArC,EAAwCG,MAAxC,CAAvB;AACA,SAAOG,QAAQ,CAACT,IAAhB;AACD,CAND;;AAQA,eAAe;AAAEH,EAAAA,MAAF;AAAUO,EAAAA,MAAV;AAAkBT,EAAAA,QAAlB;AAA4BgB,EAAAA,MAA5B;AAAoCG,EAAAA,UAApC;AAAgDb,EAAAA;AAAhD,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const request =  await axios.get(baseUrl)\n  return request.data\n}\n\nconst getItem = async object => {\n  const request = await axios.get(`${baseUrl}/${object.id}`)\n  return request.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async updatedObject => {\n  const response = await axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject)\n  return response.data\n}\n\nconst deleteItem = async object => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(`${baseUrl}/${object.id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, setToken, update, deleteItem, getItem }"]},"metadata":{},"sourceType":"module"}